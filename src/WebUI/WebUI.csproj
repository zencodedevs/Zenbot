<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net5.0</TargetFramework>
		<RootNamespace>Zenbot.WebUI</RootNamespace>
		<AssemblyName>Zenbot.WebUI</AssemblyName>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>true</IsPackable>
		<!--<IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>-->

		<!-- Set this to true if you enable server-side prerendering -->
		<BuildServerSideRenderer>false</BuildServerSideRenderer>
		<UserSecretsId>efad71c6-743c-4b87-9de8-f26d77146f6d</UserSecretsId>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
		<DockerfileContext>..\..</DockerfileContext>
		<DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath>
		<CodeAnalysisRuleSet>..\..\.sonarlint\zenbot-admin-testcsharp.ruleset</CodeAnalysisRuleSet>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="FluentValidation.AspNetCore" Version="10.2.3" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="5.0.12" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="5.0.9" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning.ApiExplorer" Version="5.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="5.0.12" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.12" />
		<PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="5.0.0" />
		<PackageReference Include="Microsoft.FeatureManagement" Version="2.3.0" />
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.10.8" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.12">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="5.0.2" />
		<PackageReference Include="NLog.Web.AspNetCore" Version="4.13.0" />
		<PackageReference Include="Npgsql" Version="5.0.7" />
		<PackageReference Include="NSwag.AspNetCore" Version="13.9.4" />
		<PackageReference Include="NSwag.MSBuild" Version="13.9.4">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="SonarAnalyzer.CSharp" Version="8.32.0.39516">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="System.Data.SqlClient" Version="4.8.3" />
		<PackageReference Include="Zen.Mvc" Version="1.0.64" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Application\Application.csproj" />
		<ProjectReference Include="..\Domain\Domain.csproj" />
		<ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
		<ProjectReference Include="..\BotCore\BotCore.csproj" />
	</ItemGroup>

	<ItemGroup>
		<None Update="libwkhtmltox.dylib">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<ItemGroup>
		<None Include="config.json">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<ItemGroup>
		<Folder Include="wwwroot\" />
	</ItemGroup>

	<!--<Target Name="NSwag" AfterTargets="Build" Condition="'$(Configuration)' == 'Debug'">
		<Copy SourceFiles="@(Reference)" DestinationFolder="$(OutDir)References" />
		<Exec Command="$(NSwagExe_Net50) run /variables:Configuration=$(Configuration)" />
		<RemoveDir Directories="$(OutDir)References" />
	</Target>-->

	<ProjectExtensions>
		<VisualStudio>
			<UserProperties appsettings_1json__JsonSchema="" />
		</VisualStudio>
	</ProjectExtensions>

</Project>